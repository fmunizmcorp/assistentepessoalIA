openapi: 3.0.3
info:
  title: Orquestrador de IAs
  version: "1.2.0"
servers:
  - url: https://assistentepessoalia-zmu0.onrender.com
paths:
  /api/health:
    get:
      operationId: health
      responses:
        '200': { description: OK }
  /api/repo/ensure-structure:
    post:
      operationId: ensureStructure
      security: [{ ApiKeyAuth: [] }]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [scope]
              properties:
                scope: { type: string, enum: [global, demand] }
                demandSlug: { type: string }
                version: { type: integer, minimum: 1 }
                title: { type: string }
                dryRun: { type: boolean }
      responses:
        '200': { description: Estrutura criada }
  /api/demand/init:
    post:
      operationId: initDemand
      security: [{ ApiKeyAuth: [] }]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [slug]
              properties:
                slug: { type: string }
                title: { type: string }
                version: { type: integer, minimum: 1, default: 1 }
                dryRun: { type: boolean }
      responses:
        '200': { description: Demanda inicializada }
  /api/knowledge/save:
    post:
      operationId: saveKnowledge
      security: [{ ApiKeyAuth: [] }]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [scope, filename, content]
              properties:
                scope: { type: string, enum: [global, demand] }
                demandSlug: { type: string }
                version: { type: integer, minimum: 1 }
                filename: { type: string }
                content: {}
                area: { type: string, enum: [notes, inputs, outputs], default: notes }
      responses:
        '200': { description: Salvo }
  /api/file/save-base64:
    post:
      operationId: saveFileBase64
      security: [{ ApiKeyAuth: [] }]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [scope, filename, base64]
              properties:
                scope: { type: string, enum: [global, demand] }
                demandSlug: { type: string }
                version: { type: integer, minimum: 1 }
                area: { type: string, enum: [inputs, outputs], default: inputs }
                filename: { type: string }
                base64: { type: string }
      responses:
        '200': { description: Salvo }
  /api/url/canonicalize:
    get:
      operationId: canonicalize
      parameters:
        - in: query
          name: path
          schema: { type: string }
      responses:
        '200': { description: OK }
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
